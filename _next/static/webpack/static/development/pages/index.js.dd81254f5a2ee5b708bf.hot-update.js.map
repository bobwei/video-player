{"version":3,"file":"static/webpack/static/development/pages/index.js.dd81254f5a2ee5b708bf.hot-update.js","sources":["webpack:///./pages/index.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/media-has-caption, react/jsx-one-expression-per-line */\n/* eslint-disable react/prop-types */\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'next/router';\nimport * as R from 'ramda';\nimport compose from 'recompose/compose';\n\nimport createKeyBindings from '../functions/createKeyBindings';\n\nconst fn = ({ router }) => {\n  const [src, setSrc] = useState(R.pathOr(null, ['query', 'src'])(router));\n  const videoRef = React.createRef();\n  useEffect(() => {\n    return createKeyBindings({ ref: videoRef });\n  });\n  const onChange = (e) => {\n    const url = URL.createObjectURL(e.target.files[0]);\n    setSrc(url);\n  };\n  return (\n    <>\n      <div className=\"container\">\n        {src && <video className=\"video-player\" autoPlay controls src={src} ref={videoRef} />}\n        {!src && (\n          <div className=\"upload\">\n            <input type=\"file\" onChange={onChange} />\n          </div>\n        )}\n      </div>\n      <style jsx>\n        {`\n          .container {\n            text-align: center;\n            padding: 5% 0;\n            overflow: hidden;\n          }\n          .video-player {\n            width: 80vw;\n          }\n          .upload {\n            width: 80vw;\n            height: 60vh;\n            border: 3px dashed #ccc;\n            margin: 0 auto;\n          }\n          .upload > input {\n            width: 100%;\n            height: 100%;\n            opacity: 0;\n          }\n        `}\n      </style>\n    </>\n  );\n};\n\nexport default compose(withRouter)(fn);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAkCA;AACA;AACA;;;;A","sourceRoot":""}